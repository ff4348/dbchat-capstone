ARG APP_DIR=/app

#############
# Build (Prepare Environment) image
#############
FROM python:3.10-slim AS build
ARG APP_DIR

# Install curl so we can get poetry
# install build-essential and libffi-dev so we can install poetry and dependencies (compiles some code)
RUN apt-get update \
    && apt-get install -y \
         curl \
         build-essential \
         libffi-dev \
    && rm -rf /var/lib/apt/lists/*

# install poetry and add to path
ENV POETRY_VERSION=1.6.1
RUN curl -sSL https://install.python-poetry.org | python -
ENV PATH /root/.local/bin:$PATH

# change work directory for where our app will live
WORKDIR ${APP_DIR}
COPY pyproject.toml poetry.lock ./

# Copy over the venv including any symbolic links, do not install development/testing libraries when install poetry dependencies
#RUN python -m venv --copies ${APP_DIR}/venv
RUN python -m venv ${APP_DIR}/venv
RUN . ${APP_DIR}/venv/bin/activate && poetry install --only main


#############
# Deployment image
#############
FROM python:3.10-slim as run
ARG APP_DIR

COPY --from=build ${APP_DIR}/venv ${APP_DIR}/venv/
ENV PATH ${APP_DIR}/venv/bin:$PATH

WORKDIR ${APP_DIR}/
COPY  . ./

EXPOSE 8501

HEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health

ENTRYPOINT ["streamlit", "run", "dbchat_frontend/main.py", "--server.port=8501", "--server.address=0.0.0.0"]